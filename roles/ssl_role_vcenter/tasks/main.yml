---

- name: Show variables
  ansible.builtin.debug:
    msg: "{{ ca_cert_path }} {{ vcenter_server }} {{ vcenter_user }} {{ machine_ssl_cert_path }}"

# - name: Connect to vCenter and add CA cert
#   block:
#     - name: Add CA to vCenter trusted store
#       vcenter_cert_mgmt:
#         vcenter_action: "add_CA"
#         ca_cert_path: "{{ ca_cert_path }}"
#         vcenter_server: "{{ vcenter_server }}"
#         vcenter_user: "{{ vcenter_user }}"
#         vcenter_password: "{{ vcenter_password }}"
#       register: output_add_ca

#   rescue:
#     - name: show error message
#       ansible.builtin.debug:
#         msg: "Error !"
#     - name: fail
#       ansible.builtin.fail:
#         msg: "Critical error 1"

    # - name: Set error message
    #   ansible.builtin.set_fact:
    #     assert_msg: >
    #       Failed to add CA certificate to the trusted store.

    # - name: RC in case of failure
    #   ansible.builtin.include_role:
    #     name: ansible_role_returncode
    #   vars:
    #     rc_support: account
    #     rc_group: framework_playbook
    #     rc_number: 2200
    #     rc_message: "{{ assert_msg }}"

    # - name: Set exit flag
    #   ansible.builtin.set_fact:
    #     validate_rc_error: true
    #   delegate_facts: true
    #   delegate_to: localhost

    # - name: End all tasks for this host
    #   ansible.builtin.meta: end_host

- name: Change Machine SSL certificate and wait for vCenter
  block:
    - name: Change vCenter Machine SSL certificate
      vcenter_cert_mgmt:
        vcenter_action: "replace_certificate"
        machine_ssl_cert_path: "{{ machine_ssl_cert_path }}"
        vcenter_server: "{{ vcenter_server }}"
        vcenter_user: "{{ vcenter_user }}"
        vcenter_password: "{{ vcenter_password }}"
      register: output_cert_mgmt

    - name: Wait for vCenter to be back online after cert change
      ansible.builtin.wait_for:
        host: "{{ vcenter_server }}"
        port: 443
        delay: 50
        timeout: 200
      delegate_to: localhost
      register: waitfor_result

    - name: Show wait_for result (for troubleshooting)
      ansible.builtin.debug:
        var: waitfor_result

    - name: Assert vCenter is back online on port 443
      ansible.builtin.assert:
        that:
          - waitfor_result.state is defined
          - waitfor_result.state == "started"
        fail_msg: "vCenter is NOT responding on port 443 after certificate change."
        success_msg: "vCenter is back online and responding on port 443."

  rescue:
    - name: show error message
      ansible.builtin.debug:
        msg: "Error!"
    - name: fail
      ansible.builtin.debug:
        msg: "critical error 2"


    # - name: Set error message
    #   ansible.builtin.set_fact:
    #     assert_msg: >
    #       Machine SSL certificate change or vCenter restart failed.
    #       {% if "Machine SSL" in ansible_failed_result.msg | d('') %}Failed to change the Machine SSL certificate.{% endif %}
    #       {% if "wait for" in ansible_failed_result.msg | d('') %}Timeout waiting for vCenter to come online.{% endif %}

    # - name: RC in case of failure
    #   ansible.builtin.include_role:
    #     name: ansible_role_returncode
    #   vars:
    #     rc_support: account
    #     rc_group: framework_playbook
    #     rc_number: 2200
    #     rc_message: "{{ assert_msg }}"

    # - name: Set exit flag
    #   ansible.builtin.set_fact:
    #     validate_rc_error: true
    #   delegate_facts: true
    #   delegate_to: localhost

    # - name: End all tasks for this host
    #   ansible.builtin.meta: end_host
